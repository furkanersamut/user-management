{
	"info": {
		"_postman_id": "8bef7c29-468b-48e1-811a-07d930a66e59",
		"name": "Mehmet_Furkan_Ersamut",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19124891"
	},
	"item": [
		{
			"name": "GET USER LIST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status must be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Answer type must be JSON\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"User list not empty\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							"pm.test(\"Response time max limit 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"console.log(\"Response time:\", pm.response.responseTime + \"ms\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD NEW USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status must be 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Answer body have to have id, name and email\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"    pm.expect(jsonData).to.have.property(\"email\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"createdUserId\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Response time max limit 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"console.log(\"Response time:\", pm.response.responseTime + \"ms\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Mehmet\",\r\n  \"email\": \"mehmet@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "CHANGE NEW USER EMAIL WITH ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status must be 200 or 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
							"});\r",
							"\r",
							"pm.test(\"Update Successfull message must be\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User updated\");\r",
							"});\r",
							"pm.test(\"Response time max limit 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"console.log(\"Response time:\", pm.response.responseTime + \"ms\");\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"mehmetfurkan@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{createdUserId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{createdUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE USER WÄ°TH ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200)\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User deleted message must be\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User deleted\");\r",
							"});\r",
							"pm.test(\"Response time max limit 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"console.log(\"Response time:\", pm.response.responseTime + \"ms\");\r",
							"\r",
							"pm.environment.unset(\"currentId\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/{{createdUserId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{createdUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "NEGATIVE TEST WITHOUT EMAIL POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status must be 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Body have to have fail message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"error\");\r",
							"    pm.expect(jsonData.error).to.eql(\"Name and email are required\");\r",
							"});\r",
							"pm.test(\"Response time max limit 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"console.log(\"Response time:\", pm.response.responseTime + \"ms\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"I DONT HAVE EMAIL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "NEGATIVE TEST NOT FOUND USER UPDATE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status must be 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"User not found\");\r",
							"});\r",
							"pm.test(\"Response time max limit 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"console.log(\"Response time:\", pm.response.responseTime + \"ms\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"WRONG USER ID\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/99887766",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"99887766"
					]
				}
			},
			"response": []
		},
		{
			"name": "NEGATIVE TEST NOT FOUND USER DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status must be 404 \", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"User not found\");\r",
							"});\r",
							"pm.test(\"Response time max limit 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"console.log(\"Response time:\", pm.response.responseTime + \"ms\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/99887766",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"99887766"
					]
				}
			},
			"response": []
		}
	]
}